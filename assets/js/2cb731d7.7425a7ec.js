"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[6432],{28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>d});var a=n(96540);const i={},t=a.createContext(i);function r(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(t.Provider,{value:s},e.children)}},46497:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"api/linea-smart-contracts/interfaces/l2/il2messagemanagerv1","title":"IL2MessageManagerV1","description":"MinimumFeeChanged","source":"@site/docs/api/linea-smart-contracts/interfaces/l2/il2messagemanagerv1.mdx","sourceDirName":"api/linea-smart-contracts/interfaces/l2","slug":"/api/linea-smart-contracts/interfaces/l2/il2messagemanagerv1","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/l2/il2messagemanagerv1","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/api/linea-smart-contracts/interfaces/l2/il2messagemanagerv1.mdx","tags":[],"version":"current","lastUpdatedBy":"oliver renwick","lastUpdatedAt":1742484500000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"IL2MessageManager","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/l2/il2messagemanager"},"next":{"title":"IL2MessageServiceV1","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/l2/il2messageservicev1"}}');var i=n(74848),t=n(28453);const r={},d="IL2MessageManagerV1",l={},h=[{value:"MinimumFeeChanged",id:"minimumfeechanged",level:3},{value:"Parameters",id:"parameters",level:4},{value:"L1L2MessageHashesAddedToInbox",id:"l1l2messagehashesaddedtoinbox",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"MessageHashesListLengthHigherThanOneHundred",id:"messagehasheslistlengthhigherthanonehundred",level:3},{value:"MessageDoesNotExistOrHasAlreadyBeenClaimed",id:"messagedoesnotexistorhasalreadybeenclaimed",level:3}];function c(e){const s={code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"il2messagemanagerv1",children:(0,i.jsx)(s.code,{children:"IL2MessageManagerV1"})})}),"\n",(0,i.jsx)(s.h3,{id:"minimumfeechanged",children:"MinimumFeeChanged"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-solidity",children:"event MinimumFeeChanged(uint256 previousMinimumFee, uint256 newMinimumFee, address calledBy)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Emitted when L2 minimum fee is changed."}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"previousMinimumFee"}),(0,i.jsx)(s.td,{children:"uint256"}),(0,i.jsx)(s.td,{children:"The previous minimum fee in Wei."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"newMinimumFee"}),(0,i.jsx)(s.td,{children:"uint256"}),(0,i.jsx)(s.td,{children:"The new minimum fee in Wei."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"calledBy"}),(0,i.jsx)(s.td,{children:"address"}),(0,i.jsx)(s.td,{children:"The indexed address who changed the minimum fee."})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"l1l2messagehashesaddedtoinbox",children:"L1L2MessageHashesAddedToInbox"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-solidity",children:"event L1L2MessageHashesAddedToInbox(bytes32[] messageHashes)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Emitted when L1->L2 message hashes have been added to L2 storage."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"messageHashes"}),(0,i.jsx)(s.td,{children:"bytes32[]"}),(0,i.jsx)(s.td,{children:"The message hashes that were added to L2 for claiming."})]})})]}),"\n",(0,i.jsx)(s.h3,{id:"messagehasheslistlengthhigherthanonehundred",children:"MessageHashesListLengthHigherThanOneHundred"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-solidity",children:"error MessageHashesListLengthHigherThanOneHundred(uint256 length)\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"Thrown when the message hashes list length is higher than one hundred."})}),"\n",(0,i.jsx)(s.h3,{id:"messagedoesnotexistorhasalreadybeenclaimed",children:"MessageDoesNotExistOrHasAlreadyBeenClaimed"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-solidity",children:"error MessageDoesNotExistOrHasAlreadyBeenClaimed(bytes32 messageHash)\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"Thrown when the message does not exist or has already been claimed."})})]})}function m(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);