"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[82],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},76869:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"get-started/tooling/cross-chain/ccip","title":"Chainlink Cross-Chain Interoperability Protocol (CCIP)","description":"Chainlink CCIP is a blockchain interoperability protocol that enables developers to build secure","source":"@site/docs/get-started/tooling/cross-chain/ccip.mdx","sourceDirName":"get-started/tooling/cross-chain","slug":"/get-started/tooling/cross-chain/ccip","permalink":"/web3-feedback/get-started/tooling/cross-chain/ccip","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/get-started/tooling/cross-chain/ccip.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1746010655000,"frontMatter":{"title":"Chainlink Cross-Chain Interoperability Protocol (CCIP)","sidebar_label":"Chainlink CCIP","image":"/img/socialCards/chainlink-cross-chain-interoperability-protocol-ccip.jpg"},"sidebar":"getStartedSidebar","previous":{"title":"Axelar","permalink":"/web3-feedback/get-started/tooling/cross-chain/axelar"},"next":{"title":"CCIP Read","permalink":"/web3-feedback/get-started/tooling/cross-chain/ccip-read"}}');var s=t(74848),r=t(28453);const a={title:"Chainlink Cross-Chain Interoperability Protocol (CCIP)",sidebar_label:"Chainlink CCIP",image:"/img/socialCards/chainlink-cross-chain-interoperability-protocol-ccip.jpg"},o=void 0,c={},l=[{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Chainlink CCIP is a blockchain interoperability protocol that enables developers to build secure\napplications that can transfer tokens, messages (data), or both tokens and messages across chains."}),"\n",(0,s.jsx)(n.p,{children:"CCIP enables three main actions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Arbitrary messaging"}),": Send arbitrary data (encoded as bytes) to a receiving smart contract on\na different chain."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Token transfers"}),": Transfer tokens to a smart contract or an externally owned account (EOA)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Programmable token transfers"}),": Simultaneously transfer tokens and arbitrary data in a single\ntransaction."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To use CCIP services, you need to have LINK available to pay node operators, a cost referred to as\nCCIP fees. ",(0,s.jsx)(n.a,{href:"https://docs.chain.link/resources/link-token-contracts#linea",children:"See the token contracts for LINK on Linea"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.chain.link/ccip",children:"CCIP documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.chain.link/ccip/directory/mainnet/chain/ethereum-mainnet-linea-1",children:"Linea CCIP directory"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.chain.link/resources/link-token-contracts#linea",children:"LINK token contracts on Linea"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://docs.chain.link/builders-quick-links",children:"Chainlink Builder's Quick Links"}),", showing all\nChainlink services available on Linea"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);