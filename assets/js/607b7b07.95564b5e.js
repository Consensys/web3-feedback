"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[1282],{28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var o=r(96540);const t={},i=o.createContext(t);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(i.Provider,{value:n},e.children)}},54110:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"api/linea-smart-contracts/interfaces/l1/izkevmv2","title":"IZkEvmV2","description":"StartingRootHashDoesNotMatch","source":"@site/docs/api/linea-smart-contracts/interfaces/l1/izkevmv2.mdx","sourceDirName":"api/linea-smart-contracts/interfaces/l1","slug":"/api/linea-smart-contracts/interfaces/l1/izkevmv2","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/l1/izkevmv2","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/api/linea-smart-contracts/interfaces/l1/izkevmv2.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1746010636000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"IPlonkVerifier","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/l1/iplonkverifier"},"next":{"title":"IL2MessageManager","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/l2/il2messagemanager"}}');var t=r(74848),i=r(28453);const a={},s="IZkEvmV2",l={},c=[{value:"StartingRootHashDoesNotMatch",id:"startingroothashdoesnotmatch",level:3},{value:"ProofIsEmpty",id:"proofisempty",level:3},{value:"InvalidProofType",id:"invalidprooftype",level:3},{value:"InvalidProof",id:"invalidproof",level:3},{value:"InvalidProofOrProofVerificationRanOutOfGas",id:"invalidprooforproofverificationranoutofgas",level:3}];function d(e){const n={code:"code",em:"em",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"izkevmv2",children:(0,t.jsx)(n.code,{children:"IZkEvmV2"})})}),"\n",(0,t.jsx)(n.h3,{id:"startingroothashdoesnotmatch",children:"StartingRootHashDoesNotMatch"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"error StartingRootHashDoesNotMatch()\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Thrown when the starting rootHash does not match the existing state."})}),"\n",(0,t.jsx)(n.h3,{id:"proofisempty",children:"ProofIsEmpty"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"error ProofIsEmpty()\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Thrown when zk proof is empty bytes."})}),"\n",(0,t.jsx)(n.h3,{id:"invalidprooftype",children:"InvalidProofType"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"error InvalidProofType()\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Thrown when zk proof type is invalid."})}),"\n",(0,t.jsx)(n.h3,{id:"invalidproof",children:"InvalidProof"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"error InvalidProof()\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Thrown when zk proof is invalid."})}),"\n",(0,t.jsx)(n.h3,{id:"invalidprooforproofverificationranoutofgas",children:"InvalidProofOrProofVerificationRanOutOfGas"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"error InvalidProofOrProofVerificationRanOutOfGas(string errorReason)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Thrown when the call to the verifier runs out of gas or reverts internally."})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);