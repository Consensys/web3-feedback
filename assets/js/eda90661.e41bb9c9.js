"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[6963],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},53328:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"get-started/tooling/node-providers/erpc","title":"eRPC","description":"eRPC is a fault-tolerant EVM RPC proxy and re-org aware","source":"@site/docs/get-started/tooling/node-providers/erpc.mdx","sourceDirName":"get-started/tooling/node-providers","slug":"/get-started/tooling/node-providers/erpc","permalink":"/web3-feedback/get-started/tooling/node-providers/erpc","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/get-started/tooling/node-providers/erpc.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1747828420000,"frontMatter":{"title":"eRPC","image":"/img/socialCards/erpc.jpg"},"sidebar":"getStartedSidebar","previous":{"title":"Node providers","permalink":"/web3-feedback/get-started/tooling/node-providers/"},"next":{"title":"Oracles","permalink":"/web3-feedback/get-started/tooling/oracles/"}}');var s=t(74848),i=t(28453);const a={title:"eRPC",image:"/img/socialCards/erpc.jpg"},c="Quickstart",o={},l=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://erpc.cloud/",children:"eRPC"})," is a fault-tolerant EVM RPC proxy and re-org aware\npermanent caching solution. It is built with read-heavy use-cases in mind such\nas data indexing and high-load frontend usage."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/erpc/erpc",children:"Github"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.erpc.cloud/",children:"Docs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://t.me/erpc_cloud",children:"Telegram"})}),"\n"]}),"\n",(0,s.jsx)("div",{class:"center-container",children:(0,s.jsx)("div",{class:"img-large",children:(0,s.jsx)("img",{src:"https://github.com/erpc/erpc/raw/main/assets/hla-diagram.svg",alt:"architecture diagram"})})}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"quickstart",children:"Quickstart"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create your ",(0,s.jsx)(n.a,{href:"https://docs.erpc.cloud/config/example",children:(0,s.jsx)(n.code,{children:"erpc.yaml"})}),"\nconfiguration file:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'filename="erpc.yaml"\nlogLevel: debug\nprojects:\n  - id: main\n    upstreams:\n      # You don\'t need to define architecture (e.g. evm) or chain id (e.g. 59144)\n      # as they will be detected automatically by eRPC.\n      - endpoint: https://linea-mainnet.blastapi.io/xxxx\n      - endpoint: evm+alchemy://xxxx-my-alchemy-api-key-xxxx\n'})}),"\n",(0,s.jsxs)(n.p,{children:["View ",(0,s.jsx)(n.a,{href:"https://docs.erpc.cloud/config/example",children:"the complete config example"})," for\ninspiration."]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Use the Docker image:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -v $(pwd)/erpc.yaml:/root/erpc.yaml -p 4000:4000 -p 4001:4001 ghcr.io/erpc/erpc:latest\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Send your first request:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl --location \'http://localhost:4000/main/evm/59144\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "method": "eth_getBlockByNumber",\n    "params": [\n        "0x7340c3",\n        false\n    ],\n    "id": 9199,\n    "jsonrpc": "2.0"\n}\'\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["Bring up the monitoring stack (Prometheus, Grafana) using ",(0,s.jsx)(n.code,{children:"docker-compose"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# clone the repo if you haven't\ngit clone https://github.com/erpc/erpc.git\ncd erpc\n\n# bring up the monitoring stack\ndocker-compose up -d\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["Open Grafana at ",(0,s.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})," and log in\nwith the following credentials:"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["username: ",(0,s.jsx)(n.code,{children:"admin"})]}),"\n",(0,s.jsxs)(n.li,{children:["password: ",(0,s.jsx)(n.code,{children:"admin"})]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsx)(n.li,{children:"Send more requests and watch the metrics being collected and visualized in\nGrafana."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);