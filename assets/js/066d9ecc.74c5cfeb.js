"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[2527],{28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var t=a(96540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},54484:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"api/reference/linea-estimategas","title":"linea_estimateGas","description":"Reference content for the linea_estimateGas method.","source":"@site/docs/api/reference/linea-estimategas.mdx","sourceDirName":"api/reference","slug":"/api/reference/linea-estimategas","permalink":"/web3-feedback/api/reference/linea-estimategas","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/api/reference/linea-estimategas.mdx","tags":[],"version":"current","lastUpdatedBy":"oliver renwick","lastUpdatedAt":1742484500000,"frontMatter":{"title":"linea_estimateGas","description":"Reference content for the linea_estimateGas method.","image":"/img/socialCards/lineaestimategas.jpg"},"sidebar":"apiSidebar","previous":{"title":"eth_sendRawTransaction","permalink":"/web3-feedback/api/reference/eth-sendrawtransaction"},"next":{"title":"linea_getTransactionExclusionStatusV1","permalink":"/web3-feedback/api/reference/linea-gettransactionexclusionstatusv1"}}');var s=a(74848),r=a(28453),i=a(65537),l=a(79329);const o={title:"linea_estimateGas",description:"Reference content for the linea_estimateGas method.",image:"/img/socialCards/lineaestimategas.jpg"},c="linea_estimateGas",d={},u=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2},{value:"Request",id:"request",level:3},{value:"Response",id:"response",level:3},{value:"Override state values",id:"override-state-values",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"linea_estimategas",children:(0,s.jsx)(n.code,{children:"linea_estimateGas"})})}),"\n",(0,s.jsx)(n.p,{children:"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete\nand be published on Ethereum. The transaction will not be added to the blockchain."}),"\n",(0,s.jsxs)(n.p,{children:["For more information about estimating gas, and how this API formulates the transaction costs, see\nthe ",(0,s.jsx)(n.a,{href:"/web3-feedback/get-started/how-to/gas-fees",children:"Estimate transaction costs"})," topic."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"priorityFeePerGas"})," returned by this method includes the cost of submitting the transaction to\nEthereum, which can vary based on the size of the calldata."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"linea_estimateGas"})," uses the same inputs as the standard\n",(0,s.jsx)(n.a,{href:"https://docs.infura.io/api/networks/linea/json-rpc-methods/eth_estimategas",children:(0,s.jsx)(n.code,{children:"eth_estimateGas"})}),", but\nreturns the recommended gas limit, the base fee per gas, and the priority fee per gas. We recommend\nusing ",(0,s.jsx)(n.code,{children:"linea_estimateGas"})," for more accurate results."]})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"call"}),": ",(0,s.jsx)(n.em,{children:"[required]"})," Transaction call object:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"from"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," 20 bytes - The address the transaction is sent from."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"to"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," 20 bytes - The address the transaction is directed to."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gas"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," Hexadecimal value of the gas provided for the transaction execution. ",(0,s.jsx)(n.code,{children:"linea_estimateGas"})," consumes\nzero gas, but this parameter may be needed by some executions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gasPrice"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," Hexadecimal value of the gas price used for each paid gas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxPriorityFeePerGas"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," Maximum fee, in wei, the sender is willing to pay per gas above the base fee."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxFeePerGas"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," Maximum total fee (base fee + priority fee), in wei, the sender is willing to pay per gas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"value"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," Hexadecimal value of the value sent with this transaction."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," Hash of the method signature and encoded parameters. See the\n",(0,s.jsx)(n.a,{href:"https://docs.soliditylang.org/en/latest/abi-spec.html",children:"Ethereum contract ABI specification"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"stateOverride"}),": ",(0,s.jsx)(n.em,{children:"[optional]"}),"  Object that contains the address-to-state mapping to ",(0,s.jsx)(n.a,{href:"#override-state-values",children:"override state values"}),".\nEach entry specifies a state that will be temporarily overridden before executing the call:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"balance"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," Hexadecimal of the temporary account balance for the call execution."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nonce"}),": ",(0,s.jsx)(n.em,{children:"[optional]"})," Hexadecimal of the temporary nonce value for the call execution."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"code"})," : ",(0,s.jsx)(n.em,{children:"[optional]"})," Bytecode to inject into the account."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"stateDiff"}),": ",(0,s.jsx)(n.code,{children:"key:value"})," pairs to override individual slots in the account storage."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"Hexadecimal values representing the recommended gas limit, the base fee per gas, and the priority\nfee per gas."}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["You can also call the API using ",(0,s.jsx)(n.a,{href:"https://docs.metamask.io/services/reference/linea/json-rpc-methods/",children:"Infura's supported Linea endpoints"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"request",children:"Request"}),"\n",(0,s.jsxs)(i.A,{groupId:"sdk-lang",children:[(0,s.jsx)(l.A,{value:"curl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl https://linea-mainnet.infura.io/v3/YOUR-API-KEY \\\n-X POST \\\n-H "Content-Type: application/json" \\\n-d \'{"jsonrpc": "2.0","method": "linea_estimateGas","params": [{"from": "0x971e727e956690b9957be6d51Ec16E73AcAC83A7","gas":"0x21000"}],"id": 53}\'\n'})})}),(0,s.jsx)(l.A,{value:"ethers.js",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'type LineaEstimateGasResponse = {\n  baseFeePerGas: string;\n  priorityFeePerGas: string;\n  gasLimit: string;\n};\n\nconst provider = new ethers.JsonRpcProvider("<RPC_URL>");\n\nconst params = {\n  from: "0x...", // Signer address\n  to: "0x...", // Recipient address\n  value: ethers.parseEther("1").toString(), // Value in wei\n  data: "0x...", // Encoded call in case of smart contract interaction\n};\n\nconst fees: LineaEstimateGasResponse = await provider.send("linea_estimateGas", [params]);\nconsole.log(fees);\n'})})}),(0,s.jsx)(l.A,{value:"viem",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { createPublicClient, http, parseEther } from 'viem'\nimport { linea } from 'viem/chains'\nimport { estimateGas } from 'viem/linea'\n\nasync function EstimateGas() {\n  const client = createPublicClient({\n    chain: linea,\n    transport: http(),\n  });\n\n  try {\n    const gasEstimate = await estimateGas(client, {\n      account: '0x...', // Source account's address\n      to: '0x...', // Destination account's address\n      value: parseEther('0.004') // Amount of ETH to transfer\n    });\n    console.log('Gas Estimate:', gasEstimate);\n  } catch (error) {\n    console.error('Error estimating gas:', error);\n  }\n}\n\nEstimateGas();\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,s.jsxs)(i.A,{groupId:"sdk-lang",children:[(0,s.jsx)(l.A,{value:"curl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-JSON",children:'{\n  "jsonrpc": "2.0",\n  "id": 53,\n  "result": {\n    "baseFeePerGas": "0x7",\n    "gasLimit": "0xcf08",\n    "priorityFeePerGas": "0x43a82a4"\n  }\n}\n'})})}),(0,s.jsx)(l.A,{value:"ethers.js",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'{\n  baseFeePerGas: "0x7",\n  gasLimit: "0xcf08",\n  priorityFeePerGas: "0x43a82a4"\n}\n'})})}),(0,s.jsx)(l.A,{value:"viem",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"{\n  baseFeePerGas: 7n,\n  gasLimit: 53000n,\n  priorityFeePerGas: 4444716n\n}\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Where:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"baseFeePerGas"})," - Uses the Linea base fee which is set at 7 wei."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gasLimit"})," - Uses the standard ",(0,s.jsx)(n.code,{children:"eth_estimateGas"})," API calculation."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"priorityFeePerGas"})," - Calculates the fee required to prioritize a transaction by considering factors such as the\ncompressed transaction size, layer 1 verification costs and capacity, gas price ratio between layer 1 and\nlayer 2, the transaction's gas usage, the minimum gas price on layer 2, and a minimum\nmargin (for error) for gas price estimation."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The result of the request returns hexadecimal equivalent integers of gas prices in wei. Convert the hexadecimal value into\ndecimals to get the wei value. You can use any hexadecimal to decimal converter such as\n",(0,s.jsx)(n.a,{href:"https://www.rapidtables.com/convert/number/hex-to-decimal.html",children:"RapidTables"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"override-state-values",children:"Override state values"}),"\n",(0,s.jsx)(n.p,{children:"You can override an account with temporary state values before making the call. This allows you to\nmake temporary state changes without affecting the actual blockchain state."}),"\n",(0,s.jsx)(n.p,{children:"The following example estimates the cost for transferring an ERC-20 token for an account which does not\nhave the required assets onchain."}),"\n",(0,s.jsx)(n.p,{children:"The example sets a custom ETH balance for the sender (to cover gas costs) and modifies the account's\nbalance within the ERC-20 contract's storage for the duration of the call."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'curl https://linea-mainnet.infura.io/v3/<YOUR-API-KEY> \\\n-X POST \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "jsonrpc":"2.0",\n  "method":"linea_estimateGas",\n  "params":[\n      {\n          "from":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",\n          "to":"0xe5D7C2a44FfDDf6b295A15c148167daaAf5Cf34f",\n          "data":"0xa9059cbb000000000000000000000000627306090abaB3A6e1400e9345bC60c78a8BEf570000000000000000000000000000000000000000000000001bc16d674ec80000"\n      },\n      {\n          "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73": {\n              "balance": "0x16345785d8a0000"\n          },\n          "0xe5D7C2a44FfDDf6b295A15c148167daaAf5Cf34f": {\n              "stateDiff":{\n                  "0x2d206e5210c119b1cbed144f517f1f1dfd586eed26793a233e6afc261f4cf97f":"0x0000000000000000000000000000000000000000000000001bc16d674ec80000"\n              }\n          }\n      }\n  ],\n  "id":53\n}\'\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},65537:(e,n,a)=>{a.d(n,{A:()=>w});var t=a(96540),s=a(34164),r=a(65627),i=a(56347),l=a(50372),o=a(30604),c=a(11861),d=a(78749);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:s}}=e;return{value:n,label:a,attributes:t,default:s}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function m(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:a}=e;const s=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,o.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:s}=e,r=h(e),[i,o]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[c,u]=p({queryString:a,groupId:s}),[f,x]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,d.Dv)(a);return[s,(0,t.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:s}),b=(()=>{const e=c??f;return m({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{b&&o(b)}),[b]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),x(e)}),[u,x,r]),tabValues:r}}var x=a(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=a(74848);function g(e){let{className:n,block:a,selectedValue:t,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,a=o.indexOf(n),s=l[a].value;s!==t&&(c(n),i(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},n),children:l.map((e=>{let{value:n,label:a,attributes:r}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{o.push(e)},onKeyDown:u,onClick:d,...r,className:(0,s.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:r}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,j.jsx)(g,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,j.jsx)(y,{...e,children:u(e.children)},String(n))}},79329:(e,n,a)=>{a.d(n,{A:()=>i});a(96540);var t=a(34164);const s={tabItem:"tabItem_Ymn6"};var r=a(74848);function i(e){let{children:n,hidden:a,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,i),hidden:a,children:n})}}}]);