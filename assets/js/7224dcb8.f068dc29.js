"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[7595],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(96540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}},65537:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(96540),r=t(34164),s=t(65627),i=t(56347),o=t(50372),l=t(30604),c=t(11861),d=t(78749);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function f(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=h(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,u]=p({queryString:t,groupId:r}),[m,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),y=(()=>{const e=c??m;return f({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{y&&l(y)}),[y]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!f({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var b=t(9136);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function v(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),r=o[t].value;r!==a&&(c(n),i(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function j(e){const n=m(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",y.tabList),children:[(0,g.jsx)(v,{...n,...e}),(0,g.jsx)(x,{...n,...e})]})}function w(e){const n=(0,b.A)();return(0,g.jsx)(j,{...e,children:u(e.children)},String(n))}},79329:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var s=t(74848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,i),hidden:t,children:n})}},93183:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"get-started/how-to/verify-smart-contract/hardhat","title":"Hardhat","description":"To verify your Hardhat contracts, use Hardhat\'s Etherscan plugin to verify contracts on Lineascan.","source":"@site/docs/get-started/how-to/verify-smart-contract/hardhat.mdx","sourceDirName":"get-started/how-to/verify-smart-contract","slug":"/get-started/how-to/verify-smart-contract/hardhat","permalink":"/web3-feedback/get-started/how-to/verify-smart-contract/hardhat","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/get-started/how-to/verify-smart-contract/hardhat.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1747823869000,"frontMatter":{"title":"Hardhat","image":"/img/socialCards/hardhat.jpg"},"sidebar":"getStartedSidebar","previous":{"title":"Foundry","permalink":"/web3-feedback/get-started/how-to/verify-smart-contract/foundry"},"next":{"title":"Migrate a dapp to Linea","permalink":"/web3-feedback/get-started/how-to/migrate-dapp"}}');var r=t(74848),s=t(28453),i=t(65537),o=t(79329);const l={title:"Hardhat",image:"/img/socialCards/hardhat.jpg"},c=void 0,d={},u=[{value:"Download the plugin",id:"download-the-plugin",level:2},{value:"Add your Lineascan API Key",id:"add-your-lineascan-api-key",level:2},{value:"Add the custom chain",id:"add-the-custom-chain",level:2},{value:"Verify the smart contract",id:"verify-the-smart-contract",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["To verify your Hardhat contracts, use ",(0,r.jsx)(n.a,{href:"https://hardhat.org/hardhat-runner/plugins/nomiclabs-hardhat-etherscan",children:"Hardhat's Etherscan plugin"})," to verify contracts on Lineascan."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This is included as part of the ",(0,r.jsx)(n.code,{children:"hardhat-toolbox"})," plugin."]})}),"\n",(0,r.jsxs)(n.p,{children:["These steps assume you stored your secret keys in a ",(0,r.jsx)(n.code,{children:".env"})," file, which you can read more about\n",(0,r.jsx)(n.a,{href:"/web3-feedback/get-started/how-to/deploy-smart-contract/hardhat#deploy-the-contract",children:"in the Hardhat deployment instructions"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"download-the-plugin",children:"Download the plugin"}),"\n",(0,r.jsxs)(n.p,{children:["If you aren't already using ",(0,r.jsx)(n.code,{children:"@nomicfoundation/hardhat-toolbox"}),", you can use ",(0,r.jsx)(n.code,{children:"@nomicfoundation/hardhat-verify"})," instead. Find the instructions on how to add it to your project ",(0,r.jsx)(n.a,{href:"https://hardhat.org/hardhat-runner/plugins/nomicfoundation-hardhat-verify#installation",children:"here"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"add-your-lineascan-api-key",children:"Add your Lineascan API Key"}),"\n",(0,r.jsxs)(n.p,{children:["Obtain a Lineascan (Linea instance of Etherscan) key by creating an account at\n",(0,r.jsx)(n.a,{href:"https://lineascan.build/myapikey",children:"https://lineascan.build/myapikey"}),". Grab your key, and add it to the ",(0,r.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"LINEASCAN_API_KEY=YOUR_API_KEY_HERE\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Then, add the key to your ",(0,r.jsx)(n.code,{children:"hardhat.config.js"})," as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { PRIVATE_KEY, LINEASCAN_API_KEY } = process.env;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"add-the-custom-chain",children:"Add the custom chain"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["These instructions verify using the Linea instance of Etherscan, which currently doesn't support Yul. If you\nwould like to verify using Blockscout, please use the ",(0,r.jsx)(n.a,{href:"/web3-feedback/get-started/build/block-explorers",children:"Blockscout API URL for the required network"}),"."]})}),"\n","\n",(0,r.jsx)(n.p,{children:"First, we'll need to add a custom chain like so:"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(o.A,{value:"Mainnet",label:"Mainnet",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'networks: {\n  linea_mainnet: {\n    ...\n  }\n},\netherscan: {\n  apiKey: {\n    linea_mainnet: LINEASCAN_API_KEY\n  },\n  customChains: [\n    {\n      network: "linea_mainnet",\n      chainId: 59144,\n      urls: {\n        apiURL: "https://api.lineascan.build/api",\n        browserURL: "https://lineascan.build/"\n      }\n    }\n  ]\n}\n'})})}),(0,r.jsx)(o.A,{value:"Testnet",label:"Testnet",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'networks: {\n  linea_sepolia: {\n    ...\n  }\n},\netherscan: {\n  apiKey: {\n    linea_sepolia: LINEASCAN_API_KEY\n  },\n  customChains: [\n    {\n      network: "linea_sepolia",\n      chainId: 59141,\n      urls: {\n        apiURL: "https://api-sepolia.lineascan.build/api",\n        browserURL: "https://sepolia.lineascan.build/address"\n      }\n    }\n  ]\n}\n'})})})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The Etherscan ",(0,r.jsx)(n.code,{children:"apiKey"})," and network name for your custom chain must match the network name under ",(0,r.jsx)(n.code,{children:"networks"})," in your ",(0,r.jsx)(n.code,{children:"hardhat.config.js"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"verify-the-smart-contract",children:"Verify the smart contract"}),"\n",(0,r.jsx)(n.p,{children:"To verify your contract, run the following command:"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(o.A,{value:"Mainnet",label:"Mainnet",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx hardhat verify --network linea_mainnet <DEPLOYED_CONTRACT_ADDRESS> <CONTRACT_ARGUMENTS>\n"})})}),(0,r.jsx)(o.A,{value:"Testnet",label:"Testnet",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx hardhat verify --network linea_sepolia <DEPLOYED_CONTRACT_ADDRESS> <CONTRACT_ARGUMENTS>\n"})})})]}),"\n",(0,r.jsx)(n.p,{children:"You should see something that looks a little like this if verifying on Linea Sepolia:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx hardhat verify --network linea_sepolia 0x3Af089fee468eb7fcf750e929321b0D7f7845f5C \"1893456000\"\n\n[INFO] Sourcify Verification Skipped: Sourcify verification is currently disabled. To enable it, add the following entry to your Hardhat configuration:\n\nsourcify: {\n  enabled: true\n}\n\nOr set 'enabled' to false to hide this message.\n\nFor more information, visit https://hardhat.org/hardhat-runner/plugins/nomicfoundation-hardhat-verify#verifying-on-sourcify\nSuccessfully submitted source code for contract\ncontracts/Lock.sol:Lock at 0x3Af089fee468eb7fcf750e929321b0D7f7845f5C\nfor verification on the block explorer. Waiting for verification result...\n\nSuccessfully verified contract Lock on the block explorer.\nhttps://sepolia.lineascan.build/address/0x3Af089fee468eb7fcf750e929321b0D7f7845f5C#code\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"If you get an error saying that the address doesn't have bytecode, it probably means that Etherscan has not indexed your contract yet. In that case, wait for a while and then try again."})}),"\n",(0,r.jsxs)(n.p,{children:["You can check that it was verified correctly by navigating to the ",(0,r.jsx)(n.a,{href:"https://sepolia.lineascan.build/",children:"testnet block explorer"})," or the ",(0,r.jsx)(n.a,{href:"https://lineascan.build/",children:"mainnet block explorer"})," and pasting in the deployed contract address."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://hardhat.org/hardhat-runner/docs/guides/verifying",children:"Learn more about different configurations for verifying your smart contracts"}),"."]})})]})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);