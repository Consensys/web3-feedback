"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[5823],{25442:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"api/linea-smart-contracts/zkevmv2","title":"ZkEvmV2","description":"MODULO_R","source":"@site/docs/api/linea-smart-contracts/zkevmv2.mdx","sourceDirName":"api/linea-smart-contracts","slug":"/api/linea-smart-contracts/zkevmv2","permalink":"/web3-feedback/api/linea-smart-contracts/zkevmv2","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/api/linea-smart-contracts/zkevmv2.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1746005489000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"LineaRollup","permalink":"/web3-feedback/api/linea-smart-contracts/linearollup"},"next":{"title":"IGenericErrors","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/igenericerrors"}}');var i=t(74848),s=t(28453);const a={},c="ZkEvmV2",l={},o=[{value:"MODULO_R",id:"modulo_r",level:3},{value:"OPERATOR_ROLE",id:"operator_role",level:3},{value:"currentTimestamp",id:"currenttimestamp",level:3},{value:"currentL2BlockNumber",id:"currentl2blocknumber",level:3},{value:"stateRootHashes",id:"stateroothashes",level:3},{value:"verifiers",id:"verifiers",level:3},{value:"_verifyProof",id:"_verifyproof",level:3},{value:"Parameters",id:"parameters",level:4}];function d(e){const r={code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"zkevmv2",children:(0,i.jsx)(r.code,{children:"ZkEvmV2"})})}),"\n",(0,i.jsx)(r.h3,{id:"modulo_r",children:"MODULO_R"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-solidity",children:"uint256 MODULO_R\n"})}),"\n",(0,i.jsx)(r.h3,{id:"operator_role",children:"OPERATOR_ROLE"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-solidity",children:"bytes32 OPERATOR_ROLE\n"})}),"\n",(0,i.jsx)(r.h3,{id:"currenttimestamp",children:"currentTimestamp"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-solidity",children:"uint256 currentTimestamp\n"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"DEPRECATED in favor of currentFinalizedState hash."})}),"\n",(0,i.jsx)(r.h3,{id:"currentl2blocknumber",children:"currentL2BlockNumber"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-solidity",children:"uint256 currentL2BlockNumber\n"})}),"\n",(0,i.jsx)(r.p,{children:"The most recent finalized L2 block number."}),"\n",(0,i.jsx)(r.h3,{id:"stateroothashes",children:"stateRootHashes"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-solidity",children:"mapping(uint256 => bytes32) stateRootHashes\n"})}),"\n",(0,i.jsx)(r.p,{children:"The most recent L2 state root hash mapped by block number."}),"\n",(0,i.jsx)(r.h3,{id:"verifiers",children:"verifiers"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-solidity",children:"mapping(uint256 => address) verifiers\n"})}),"\n",(0,i.jsx)(r.p,{children:"The verifier address to use for a proof type when proving."}),"\n",(0,i.jsx)(r.h3,{id:"_verifyproof",children:"_verifyProof"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-solidity",children:"function _verifyProof(uint256 _publicInput, uint256 _proofType, bytes _proof) internal\n"})}),"\n",(0,i.jsx)(r.p,{children:"Verifies the proof with locally computed public inputs."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"If the verifier based on proof type is not found, it reverts with InvalidProofType."})}),"\n",(0,i.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Name"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"_publicInput"}),(0,i.jsx)(r.td,{children:"uint256"}),(0,i.jsx)(r.td,{children:"The computed public input hash cast as uint256."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"_proofType"}),(0,i.jsx)(r.td,{children:"uint256"}),(0,i.jsx)(r.td,{children:"The proof type to determine which verifier contract to use."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"_proof"}),(0,i.jsx)(r.td,{children:"bytes"}),(0,i.jsx)(r.td,{children:"The proof to be verified with the proof type verifier contract."})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var n=t(96540);const i={},s=n.createContext(i);function a(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);