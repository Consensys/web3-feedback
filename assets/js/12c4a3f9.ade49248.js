"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[7088],{28453:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>l});var t=a(96540);const n={},i=t.createContext(n);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(i.Provider,{value:s},e.children)}},33465:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/linea-smart-contracts/messageservice/l1/v1/l1messagemanagerv1","title":"L1MessageManagerV1","description":"INBOXSTATUSUNKNOWN","source":"@site/docs/api/linea-smart-contracts/messageservice/l1/v1/l1messagemanagerv1.mdx","sourceDirName":"api/linea-smart-contracts/messageservice/l1/v1","slug":"/api/linea-smart-contracts/messageservice/l1/v1/l1messagemanagerv1","permalink":"/web3-feedback/api/linea-smart-contracts/messageservice/l1/v1/l1messagemanagerv1","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/api/linea-smart-contracts/messageservice/l1/v1/l1messagemanagerv1.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1747823869000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"L1MessageService","permalink":"/web3-feedback/api/linea-smart-contracts/messageservice/l1/l1messageservice"},"next":{"title":"L1MessageServiceV1","permalink":"/web3-feedback/api/linea-smart-contracts/messageservice/l1/v1/l1messageservicev1"}}');var n=a(74848),i=a(28453);const r={},l="L1MessageManagerV1",c={},d=[{value:"INBOX_STATUS_UNKNOWN",id:"inbox_status_unknown",level:3},{value:"INBOX_STATUS_RECEIVED",id:"inbox_status_received",level:3},{value:"OUTBOX_STATUS_UNKNOWN",id:"outbox_status_unknown",level:3},{value:"OUTBOX_STATUS_SENT",id:"outbox_status_sent",level:3},{value:"OUTBOX_STATUS_RECEIVED",id:"outbox_status_received",level:3},{value:"outboxL1L2MessageStatus",id:"outboxl1l2messagestatus",level:3},{value:"inboxL2L1MessageStatus",id:"inboxl2l1messagestatus",level:3},{value:"_updateL2L1MessageStatusToClaimed",id:"_updatel2l1messagestatustoclaimed",level:3},{value:"Parameters",id:"parameters",level:4}];function o(e){const s={code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"l1messagemanagerv1",children:(0,n.jsx)(s.code,{children:"L1MessageManagerV1"})})}),"\n",(0,n.jsx)(s.h3,{id:"inbox_status_unknown",children:"INBOX_STATUS_UNKNOWN"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-solidity",children:"uint8 INBOX_STATUS_UNKNOWN\n"})}),"\n",(0,n.jsx)(s.p,{children:"The 2 legacy status constants for message statuses."}),"\n",(0,n.jsx)(s.h3,{id:"inbox_status_received",children:"INBOX_STATUS_RECEIVED"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-solidity",children:"uint8 INBOX_STATUS_RECEIVED\n"})}),"\n",(0,n.jsx)(s.h3,{id:"outbox_status_unknown",children:"OUTBOX_STATUS_UNKNOWN"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-solidity",children:"uint8 OUTBOX_STATUS_UNKNOWN\n"})}),"\n",(0,n.jsx)(s.p,{children:"The 3 legacy status constants for message statuses."}),"\n",(0,n.jsx)(s.h3,{id:"outbox_status_sent",children:"OUTBOX_STATUS_SENT"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-solidity",children:"uint8 OUTBOX_STATUS_SENT\n"})}),"\n",(0,n.jsx)(s.h3,{id:"outbox_status_received",children:"OUTBOX_STATUS_RECEIVED"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-solidity",children:"uint8 OUTBOX_STATUS_RECEIVED\n"})}),"\n",(0,n.jsx)(s.h3,{id:"outboxl1l2messagestatus",children:"outboxL1L2MessageStatus"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-solidity",children:"mapping(bytes32 => uint256) outboxL1L2MessageStatus\n"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"DEPRECATED in favor of the rollingHashes mapping on the L1MessageManager for L1 to L2 messaging."})}),"\n",(0,n.jsx)(s.h3,{id:"inboxl2l1messagestatus",children:"inboxL2L1MessageStatus"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-solidity",children:"mapping(bytes32 => uint256) inboxL2L1MessageStatus\n"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"Mapping to store L2->L1 message hashes status.\nmessageHash => messageStatus (0: unknown, 1: received).\nFor the most part this has been deprecated. This is only used for messages received pre-AlphaV2."})}),"\n",(0,n.jsx)(s.h3,{id:"_updatel2l1messagestatustoclaimed",children:"_updateL2L1MessageStatusToClaimed"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-solidity",children:"function _updateL2L1MessageStatusToClaimed(bytes32 _messageHash) internal\n"})}),"\n",(0,n.jsx)(s.p,{children:"Update the status of L2->L1 message when a user claims a message on L1."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"The L2->L1 message is removed from storage.\nDue to the nature of the rollup, we should not get a second entry of this."})}),"\n",(0,n.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"_messageHash"}),(0,n.jsx)(s.td,{children:"bytes32"}),(0,n.jsx)(s.td,{children:"Hash of the message."})]})})]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);