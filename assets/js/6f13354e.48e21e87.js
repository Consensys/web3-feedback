"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[2246],{15340:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"get-started/tooling/permanent-data/irys/irys-quickstart","title":"Irys quickstart","description":"Creating permanent data using Irys SDK.","source":"@site/docs/get-started/tooling/permanent-data/irys/irys-quickstart.mdx","sourceDirName":"get-started/tooling/permanent-data/irys","slug":"/get-started/tooling/permanent-data/irys/irys-quickstart","permalink":"/web3-feedback/get-started/tooling/permanent-data/irys/irys-quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/get-started/tooling/permanent-data/irys/irys-quickstart.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1744797916000,"frontMatter":{"title":"Irys quickstart","image":"/img/socialCards/irys-quickstart.jpg","description":"Creating permanent data using Irys SDK."},"sidebar":"getStartedSidebar","previous":{"title":"Overview","permalink":"/web3-feedback/get-started/tooling/permanent-data/irys/overview"},"next":{"title":"Query Irys transactions","permalink":"/web3-feedback/get-started/tooling/permanent-data/irys/irys-querying"}}');var t=a(74848),r=a(28453);const i={title:"Irys quickstart",image:"/img/socialCards/irys-quickstart.jpg",description:"Creating permanent data using Irys SDK."},l=void 0,o={},d=[{value:"Irys SDK",id:"irys-sdk",level:2},{value:"Install the SDK",id:"install-the-sdk",level:3},{value:"Import",id:"import",level:3},{value:"Connect to Irys",id:"connect-to-irys",level:3},{value:"On the server",id:"on-the-server",level:4},{value:"In the browser",id:"in-the-browser",level:4},{value:"Fund your account",id:"fund-your-account",level:3},{value:"Upload data",id:"upload-data",level:3},{value:"Upload a file",id:"upload-a-file",level:3},{value:"Upload a folder",id:"upload-a-folder",level:3},{value:"On the server",id:"on-the-server-1",level:4},{value:"In the browser",id:"in-the-browser-1",level:4},{value:"Irys CLI",id:"irys-cli",level:2},{value:"Install the CLI",id:"install-the-cli",level:3},{value:"Use private keys",id:"use-private-keys",level:3},{value:"Devnet",id:"devnet",level:3},{value:"Fund a node",id:"fund-a-node",level:3},{value:"Withdraw funds",id:"withdraw-funds",level:3},{value:"Upload a file",id:"upload-a-file-1",level:3},{value:"Upload a folder",id:"upload-a-folder-1",level:3},{value:"Use tags",id:"use-tags",level:3},{value:"Pricing",id:"pricing",level:3},{value:"Download data",id:"download-data",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Irys makes it easy to store your data onchain by supporting payments with ETH on\nLinea. You can upload data with a single upfront payment, with guaranteed\nretrieval for a duration you set at the upload time \u2014 from a few days to forever."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["To upload data, use the Irys ",(0,t.jsx)(n.a,{href:"#irys-sdk",children:"SDK"})," or ",(0,t.jsx)(n.a,{href:"#irys-cli",children:"CLI"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["To ",(0,t.jsx)(n.a,{href:"#download-data",children:"download data"}),", use the Irys gateway."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"irys-sdk",children:"Irys SDK"}),"\n",(0,t.jsx)(n.h3,{id:"install-the-sdk",children:"Install the SDK"}),"\n",(0,t.jsx)(n.p,{children:"Install using npm:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install @irys/upload @irys/upload-ethereum\n"})}),"\n",(0,t.jsx)(n.p,{children:"or yarn:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn add @irys/upload @irys/upload-ethereum\n"})}),"\n",(0,t.jsx)(n.h3,{id:"import",children:"Import"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { Uploader } from "@irys/upload";\nimport { LineaEth } from "@irys/upload-ethereum";\n'})}),"\n",(0,t.jsx)(n.h3,{id:"connect-to-irys",children:"Connect to Irys"}),"\n",(0,t.jsx)(n.h4,{id:"on-the-server",children:"On the server"}),"\n",(0,t.jsxs)(n.p,{children:["When connecting to Irys on the server, provide a private key linked to a wallet\nfunded with ",(0,t.jsx)(n.code,{children:"linea-eth"}),". This wallet will be used to pay for uploads and to sign\ntransactions."]}),"\n",(0,t.jsx)(n.p,{children:"Using ETH on Linea:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const getIrysUploader = async () => {\n  const irysUploader = await Uploader(LineaEth).withWallet(process.env.PRIVATE_KEY);\n  return irysUploader;\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:"Or use the Irys devnet with Linea Sepolia ETH:"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Uploads to the Irys devnet are purged after 60 days"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const getIrysUploader = async () => {\n  const providerUrl = "https://rpc.sepolia.linea.build";\n  const irysUploader = await Uploader(Ethereum)\n    .withWallet(process.env.PRIVATE_KEY)\n    .withRpc(rpcURL)\n    .devnet();\n \n  return irysUploader;\n};\n'})}),"\n",(0,t.jsx)(n.h4,{id:"in-the-browser",children:"In the browser"}),"\n",(0,t.jsx)(n.p,{children:"When using Irys in the browser, the wallet browser extension injects a signer\ninto the browser. This signer is used to pay for uploads and sign transactions."}),"\n",(0,t.jsx)(n.p,{children:"Irys supports:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ethers v5"}),"\n",(0,t.jsx)(n.li,{children:"Ethers v6"}),"\n",(0,t.jsx)(n.li,{children:"Viem v2"}),"\n",(0,t.jsx)(n.li,{children:"Privy"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["The following code example is for Ethers v6. For other providers, ",(0,t.jsx)(n.a,{href:"https://docs.irys.xyz/build/d/irys-in-the-browser",children:"see Irys's\ndocs"}),"."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { WebUploader } from "@irys/web-upload";\nimport { WebLineaEth } from "@irys/web-upload-ethereum";\nimport { EthersV6Adapter } from "@irys/web-upload-ethereum-ethers-v6";\nimport { ethers } from "ethers";\n \nconst getIrysUploader = async () => {\n  const provider = new ethers.BrowserProvider(window.ethereum);\n  const irysUploader = await WebUploader(WebLineaEth).withAdapter(EthersV6Adapter(provider));\n \n  return irysUploader;\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"fund-your-account",children:"Fund your account"}),"\n",(0,t.jsxs)(n.p,{children:["When you use Irys to upload data, you pay once and the data is guaranteed to be\nretrievable forever. The ",(0,t.jsx)(n.a,{href:"https://docs.irys.xyz/build/d/sdk/payment/getPrice",children:"fee is based on the number of bytes uploaded"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When calling ",(0,t.jsx)(n.code,{children:"fund()"})," pass a value in atomic units. Use the utility functions\n",(0,t.jsx)(n.code,{children:"utils.toAtomic()"})," and ",(0,t.jsx)(n.code,{children:"utils.fromAtomic()"})," to convert between atomic and\nstandard units."]}),"\n",(0,t.jsx)(n.p,{children:"You can fund up-front, allowing you send over enough tokens to cover all of a\nproject's uploads."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'try {\n  const irysUploader = await getIrysUploader();\n\n  const fundTx = await irysUploader.fund(irysUploader.utils.toAtomic(0.05));\n  console.log(\n    `Successfully funded ${irysUploader.utils.fromAtomic(fundTx.quantity)} ${\n      irysUploader.token\n    }`,\n  );\n} catch (e) {\n  console.log("Error funding node ", e);\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Or lazy-fund and fund per upload:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'try {\n  const irysUploader = await getIrysUploader();\n\n  const pathToFile = "./myNFT.png";\n  const { size } = await fs.promises.stat(pathToFile);\n  const price = await irysUploader.getPrice(size);\n  await irysUploader.fund(price);\n\n  const { id } = await irysUploader.uploadFile(pathToFile);\n  console.log(`${pathToFile} --\x3e Uploaded to https://gateway.irys.xyz/${id}`);\n} catch (e) {\n  console.log("Error funding node ", e);\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"upload-data",children:"Upload data"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const uploadData = async () => {\n  const irys = await getIrysUploader();\n  const dataToUpload = "GM world.";\n  try {\n    const tags = [{ name: "Content-Type", value: "text/plain" }];\n\n    const receipt = await irys.upload(dataToUpload, { tags });\n    console.log(`Data uploaded ==> https://gateway.irys.xyz/${receipt.id}`);\n  } catch (e) {\n    console.log("Error uploading data ", e);\n  }\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"upload-a-file",children:"Upload a file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const uploadFile = async () => {\n  const irys = await getIrysUploader();\n  const fileToUpload = "./myImage.png";\n\n  const tags = [{ name: "application-id", value: "MyNFTDrop" }];\n\n  try {\n    const receipt = await irys.uploadFile(fileToUpload, { tags: tags });\n    console.log(`File uploaded ==> https://gateway.irys.xyz/${receipt.id}`);\n  } catch (e) {\n    console.log("Error uploading file ", e);\n  }\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"upload-a-folder",children:"Upload a folder"}),"\n",(0,t.jsx)(n.p,{children:"You can upload a group of files as a single transaction from both the server and\nthe browser."}),"\n",(0,t.jsx)(n.h4,{id:"on-the-server-1",children:"On the server"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const uploadFolder = async () => {\n  const irysUploader = await getIrysUploader();\n\n  // Upload an entire folder\n  const folderToUpload = "./my-images/"; // Path to folder\n  try {\n    const receipt = await irysUploader.uploadFolder("./" + folderToUpload, {\n      indexFile: "", // Optional index file (file the user will load when accessing the manifest)\n      batchSize: 50, // Number of items to upload at once\n      keepDeleted: false, // Whether to keep now deleted items from previous uploads\n    });\n\n    console.log(`Files uploaded. Manifest ID ${receipt.id}`);\n  } catch (e) {\n    console.log("Error uploading file ", e);\n  }\n};\n'})}),"\n",(0,t.jsx)(n.h4,{id:"in-the-browser-1",children:"In the browser"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const irysUploader = await getIrysUploader();\n\nconst files: File[] = [];\nconst tags: { name: string, value: string }[][] = [];\n\n// Convert Files to TaggedFiles\nconst taggedFiles = files.map((f: TaggedFile, i: number) => {\n  f.tags = tags[i];\n  return f;\n});\n\nconst response = await irysUploader.uploadFolder(taggedFiles);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"irys-cli",children:"Irys CLI"}),"\n",(0,t.jsx)(n.h3,{id:"install-the-cli",children:"Install the CLI"}),"\n",(0,t.jsxs)(n.p,{children:["Install using npm with the ",(0,t.jsx)(n.code,{children:"-g"})," global flag."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i -g @irys/cli\n"})}),"\n",(0,t.jsx)(n.p,{children:"Depending on your setup, you may need to use the sudo command."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo npm i -g @irys/cli\n"})}),"\n",(0,t.jsx)(n.h3,{id:"use-private-keys",children:"Use private keys"}),"\n",(0,t.jsx)(n.p,{children:"When executing CLI commands involving funding nodes or signing transactions, you\nmust provide a private key."}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"-w"})," flag to specify a private key along with the -t flag to indicate\nthe token you'll use."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"irys -w <wallet-file-name> -t linea-eth\n"})}),"\n",(0,t.jsx)(n.h3,{id:"devnet",children:"Devnet"}),"\n",(0,t.jsxs)(n.p,{children:["To use Irys's devnet, where uploads are kept for ~60 days and you pay with Linea\nSepolia ETH, append ",(0,t.jsx)(n.code,{children:"-n devnet"})," to any of the commands below."]}),"\n",(0,t.jsx)(n.h3,{id:"fund-a-node",children:"Fund a node"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"fund"})," command to fund a node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"irys fund 1000000000000000 \\\n  -t linea-eth \\\n  -w bf20......c9885307 \n"})}),"\n",(0,t.jsx)(n.h3,{id:"withdraw-funds",children:"Withdraw funds"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"withdraw"})," command to withdraw funds from a node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"irys withdraw 1000000000000000 \\\n  -t linea-eth \\\n  -w bf20......c9885307 \n"})}),"\n",(0,t.jsx)(n.h3,{id:"upload-a-file-1",children:"Upload a file"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"upload"})," command to upload a file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"irys upload myImage.png \\\n  -t linea-eth \\\n  -w bf20......c9885307 \\\n  --tags tagName1 tagValue1 tagName2 tagValue2 \n"})}),"\n",(0,t.jsx)(n.h3,{id:"upload-a-folder-1",children:"Upload a folder"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"upload-dir"})," command to upload a folder."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"irys upload-dir ./myImages \\\n  -t linea-eth \\\n  -w bf20......c9885307 \n"})}),"\n",(0,t.jsx)(n.h3,{id:"use-tags",children:"Use tags"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"-t"})," option, followed by a series of name/value pairs to append metadata\ntags to your upload."]}),"\n",(0,t.jsxs)(n.p,{children:["Irys supports adding any optional ",(0,t.jsx)(n.a,{href:"/web3-feedback/get-started/tooling/permanent-data/irys/overview#tagging",children:"metadata tags"})," to\neach upload. When uploading files with a filename extension, the related\n",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type",children:(0,t.jsx)(n.code,{children:"Content-Type"})}),"\n(MIME type) tag is automatically added."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"irys upload myImage.png \\\n  -t linea-eth \\\n  -w bf20......c9885307 \\\n  --tags tagName1 tagValue1 tagName2 tagValue2 \n"})}),"\n",(0,t.jsx)(n.h3,{id:"pricing",children:"Pricing"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"price"})," command, followed by a number of bytes, to get the cost to\nupload that number of bytes. You must also provide a token (",(0,t.jsx)(n.code,{children:"-t"}),") and a node\nURL (",(0,t.jsx)(n.code,{children:"-h"}),")."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"irys price 1000000 \\\n  -t linea-eth \\\n  -n devnet \\\n  --provider-url https://rpc.sepolia.dev\n"})}),"\n",(0,t.jsx)(n.h2,{id:"download-data",children:"Download data"}),"\n",(0,t.jsxs)(n.p,{children:["When you upload data to Irys, you're given a ",(0,t.jsx)(n.a,{href:"/web3-feedback/get-started/tooling/permanent-data/irys/overview#receipts",children:"receipt"}),"\ncontaining a transaction ID. Use this ID to download your data from the Irys\ngateway by creating a URL in the format:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"https://gateway.irys.xyz/:txId"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var s=a(96540);const t={},r=s.createContext(t);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);