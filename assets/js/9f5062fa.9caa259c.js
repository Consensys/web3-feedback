"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[4906],{28453:(e,s,a)=>{a.d(s,{R:()=>t,x:()=>i});var n=a(96540);const r={},d=n.createContext(r);function t(e){const s=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),n.createElement(d.Provider,{value:s},e.children)}},62948:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"api/linea-smart-contracts/interfaces/ipausemanager","title":"IPauseManager","description":"PauseTypeRole","source":"@site/docs/api/linea-smart-contracts/interfaces/ipausemanager.mdx","sourceDirName":"api/linea-smart-contracts/interfaces","slug":"/api/linea-smart-contracts/interfaces/ipausemanager","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/ipausemanager","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/api/linea-smart-contracts/interfaces/ipausemanager.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1747823869000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"IMessageService","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/imessageservice"},"next":{"title":"IPermissionsManager","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/ipermissionsmanager"}}');var r=a(74848),d=a(28453);const t={},i="IPauseManager",l={},c=[{value:"PauseTypeRole",id:"pausetyperole",level:3},{value:"PauseType",id:"pausetype",level:3},{value:"Paused",id:"paused",level:3},{value:"Parameters",id:"parameters",level:4},{value:"UnPaused",id:"unpaused",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"PauseTypeRoleSet",id:"pausetyperoleset",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"UnPauseTypeRoleSet",id:"unpausetyperoleset",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"IsPaused",id:"ispaused",level:3},{value:"IsNotPaused",id:"isnotpaused",level:3},{value:"pauseByType",id:"pausebytype",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"unPauseByType",id:"unpausebytype",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"isPaused",id:"ispaused-1",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Return Values",id:"return-values",level:4}];function h(e){const s={code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"ipausemanager",children:(0,r.jsx)(s.code,{children:"IPauseManager"})})}),"\n",(0,r.jsx)(s.h3,{id:"pausetyperole",children:"PauseTypeRole"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"struct PauseTypeRole {\n  enum IPauseManager.PauseType pauseType;\n  bytes32 role;\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"pausetype",children:"PauseType"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"enum PauseType {\n  UNUSED,\n  GENERAL,\n  L1_L2,\n  L2_L1,\n  BLOB_SUBMISSION,\n  CALLDATA_SUBMISSION,\n  FINALIZATION,\n  INITIATE_TOKEN_BRIDGING,\n  COMPLETE_TOKEN_BRIDGING\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"paused",children:"Paused"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"event Paused(address messageSender, enum IPauseManager.PauseType pauseType)\n"})}),"\n",(0,r.jsx)(s.p,{children:"Emitted when a pause type is paused."}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"messageSender"}),(0,r.jsx)(s.td,{children:"address"}),(0,r.jsx)(s.td,{children:"The address performing the pause."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pauseType"}),(0,r.jsx)(s.td,{children:"enum IPauseManager.PauseType"}),(0,r.jsx)(s.td,{children:"The indexed pause type that was paused."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"unpaused",children:"UnPaused"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"event UnPaused(address messageSender, enum IPauseManager.PauseType pauseType)\n"})}),"\n",(0,r.jsx)(s.p,{children:"Emitted when a pause type is unpaused."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"messageSender"}),(0,r.jsx)(s.td,{children:"address"}),(0,r.jsx)(s.td,{children:"The address performing the unpause."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pauseType"}),(0,r.jsx)(s.td,{children:"enum IPauseManager.PauseType"}),(0,r.jsx)(s.td,{children:"The indexed pause type that was unpaused."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"pausetyperoleset",children:"PauseTypeRoleSet"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"event PauseTypeRoleSet(enum IPauseManager.PauseType pauseType, bytes32 role)\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Emitted when a pause type and its associated role are set in the ",(0,r.jsx)(s.code,{children:"_pauseTypeRoles"})," mapping."]}),"\n",(0,r.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pauseType"}),(0,r.jsx)(s.td,{children:"enum IPauseManager.PauseType"}),(0,r.jsx)(s.td,{children:"The indexed type of pause."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"role"}),(0,r.jsx)(s.td,{children:"bytes32"}),(0,r.jsx)(s.td,{children:"The indexed role associated with the pause type."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"unpausetyperoleset",children:"UnPauseTypeRoleSet"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"event UnPauseTypeRoleSet(enum IPauseManager.PauseType unPauseType, bytes32 role)\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Emitted when an unpause type and its associated role are set in the ",(0,r.jsx)(s.code,{children:"_unPauseTypeRoles"})," mapping."]}),"\n",(0,r.jsx)(s.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"unPauseType"}),(0,r.jsx)(s.td,{children:"enum IPauseManager.PauseType"}),(0,r.jsx)(s.td,{children:"The indexed type of unpause."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"role"}),(0,r.jsx)(s.td,{children:"bytes32"}),(0,r.jsx)(s.td,{children:"The indexed role associated with the unpause type."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"ispaused",children:"IsPaused"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"error IsPaused(enum IPauseManager.PauseType pauseType)\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:"Thrown when a specific pause type is paused."})}),"\n",(0,r.jsx)(s.h3,{id:"isnotpaused",children:"IsNotPaused"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"error IsNotPaused(enum IPauseManager.PauseType pauseType)\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:"Thrown when a specific pause type is not paused and expected to be."})}),"\n",(0,r.jsx)(s.h3,{id:"pausebytype",children:"pauseByType"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"function pauseByType(enum IPauseManager.PauseType _pauseType) external\n"})}),"\n",(0,r.jsx)(s.p,{children:"Pauses functionality by specific type."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:"Requires the role mapped in pauseTypeRoles for the pauseType."})}),"\n",(0,r.jsx)(s.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"_pauseType"}),(0,r.jsx)(s.td,{children:"enum IPauseManager.PauseType"}),(0,r.jsx)(s.td,{children:"The pause type value."})]})})]}),"\n",(0,r.jsx)(s.h3,{id:"unpausebytype",children:"unPauseByType"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"function unPauseByType(enum IPauseManager.PauseType _pauseType) external\n"})}),"\n",(0,r.jsx)(s.p,{children:"Unpauses functionality by specific type."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:"Requires the role mapped in unPauseTypeRoles for the pauseType."})}),"\n",(0,r.jsx)(s.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"_pauseType"}),(0,r.jsx)(s.td,{children:"enum IPauseManager.PauseType"}),(0,r.jsx)(s.td,{children:"The pause type value."})]})})]}),"\n",(0,r.jsx)(s.h3,{id:"ispaused-1",children:"isPaused"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-solidity",children:"function isPaused(enum IPauseManager.PauseType _pauseType) external view returns (bool pauseTypeIsPaused)\n"})}),"\n",(0,r.jsx)(s.p,{children:"Check if a pause type is enabled."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"_pauseType"}),(0,r.jsx)(s.td,{children:"enum IPauseManager.PauseType"}),(0,r.jsx)(s.td,{children:"The pause type value."})]})})]}),"\n",(0,r.jsx)(s.h4,{id:"return-values",children:"Return Values"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pauseTypeIsPaused"}),(0,r.jsx)(s.td,{children:"bool"}),(0,r.jsx)(s.td,{children:"Returns true if the pause type if paused, false otherwise."})]})})]})]})}function p(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);