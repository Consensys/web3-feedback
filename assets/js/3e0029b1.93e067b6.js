"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[9635],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},77908:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"get-started/tooling/oracles/pyth","title":"Pyth Network","description":"Pyth Network is an oracle that publishes financial market data to multiple","source":"@site/docs/get-started/tooling/oracles/pyth.mdx","sourceDirName":"get-started/tooling/oracles","slug":"/get-started/tooling/oracles/pyth","permalink":"/web3-feedback/get-started/tooling/oracles/pyth","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/get-started/tooling/oracles/pyth.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1746010636000,"frontMatter":{"title":"Pyth Network","image":"/img/socialCards/pyth-network.jpg"},"sidebar":"getStartedSidebar","previous":{"title":"ORA","permalink":"/web3-feedback/get-started/tooling/oracles/ora"},"next":{"title":"RedStone","permalink":"/web3-feedback/get-started/tooling/oracles/redstone"}}');var r=n(74848),i=n(28453);const a={title:"Pyth Network",image:"/img/socialCards/pyth-network.jpg"},o=void 0,h={},c=[{value:"How Pyth works",id:"how-pyth-works",level:2},{value:"Pyth on-demand model",id:"pyth-on-demand-model",level:2},{value:"Use price feeds",id:"use-price-feeds",level:2},{value:"Price feed IDs",id:"price-feed-ids",level:3},{value:"Pyth on EVM (Linea)",id:"pyth-on-evm-linea",level:2},{value:"Examples",id:"examples",level:3},{value:"Networks",id:"networks",level:3},{value:"Price feed IDs",id:"price-feed-ids-1",level:3},{value:"Links",id:"links",level:2}];function d(e){const t={a:"a",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Pyth Network is an oracle that publishes financial market data to multiple\nblockchains. Our market data is contributed by over 80 ",(0,r.jsx)(t.a,{href:"https://pyth.network/publishers",children:"first-party publishers"}),", including major exchanges and market making firms. We offer price feeds for a number of\ndifferent asset classes, including ",(0,r.jsx)(t.a,{href:"https://pyth.network/price-feeds",children:"US equities, commodities, and\ncryptocurrencies"}),". Each price feed publishes a\n",(0,r.jsx)(t.a,{href:"https://docs.pyth.network/documentation/how-pyth-works/price-aggregation",children:"robust aggregate"}),"\nof publisher prices that updates multiple times per second."]}),"\n",(0,r.jsx)(t.h2,{id:"how-pyth-works",children:"How Pyth works"}),"\n",(0,r.jsx)(t.p,{children:"Pyth allows market participants to publish pricing information onchain for\nothers to use. The protocol is an interaction between three parties:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.em,{children:"Publishers"})," submit pricing information to Pyth's oracle program. Pyth has\nmultiple data publishers for every product to improve the accuracy and\nrobustness of the system."]}),"\n",(0,r.jsxs)(t.li,{children:["Pyth's ",(0,r.jsx)(t.em,{children:"oracle program"})," combines publishers' data to produce a single\naggregate price and confidence interval."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.em,{children:"Consumers"})," read the price information produced by the oracle program."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"pyth-on-demand-model",children:"Pyth on-demand model"}),"\n",(0,r.jsx)(t.p,{children:"Pyth Network uses a pull price update model that is slightly different from\nother oracles you may be more familiar with. Most oracles today use a push\nmodel, where the oracle runs an offchain process that continuously sends\ntransactions to update an onchain price. In contrast, Pyth Network doesn't\noperate an offchain process that pushes prices onchain. Instead, it delegates\nthis work to Pyth Network users."}),"\n",(0,r.jsxs)(t.p,{children:["Pyth price updates are created on ",(0,r.jsx)(t.a,{href:"https://docs.pyth.network/documentation/how-pyth-works/pythnet",children:"Pythnet"}),"\nand streamed offchain via the Wormhole Network, a cross-chain messaging protocol.\nThese updates are signed such that the Pyth onchain program can verify their\nauthenticity. Updating the onchain price is a permissionless operation: anyone\ncan submit a valid Wormhole message to the Pyth contract to update the price.\nTypically, users of Pyth Network prices will submit a single transaction that\nsimultaneously updates the price and uses it in a downstream application."]}),"\n",(0,r.jsx)(t.p,{children:"Onchain prices can only move forward in time. If a user submits a Wormhole\nmessage with an outdated price, the Pyth program will not fail, but will also\nnot update the price. This means there's no guarantee that when a user\natomically updates the price and then interacts with an application powered by\nPyth, the price that the application will read will be equal to the price the\nuser submitted."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://www.youtube.com/watch?v=qdwrs23Qc9g",children:"Read an in-depth explanation from one of our contributors, Jayant"}),", and ",(0,r.jsx)(t.a,{href:"https://docs.pyth.network/documentation/pythnet-price-feeds/on-demand",children:"read more about on-demand updates"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"use-price-feeds",children:"Use price feeds"}),"\n",(0,r.jsx)(t.h3,{id:"price-feed-ids",children:"Price feed IDs"}),"\n",(0,r.jsxs)(t.p,{children:["Each Pyth Network price feed has a unique ID. However, the IDs may be\nrepresented in different formats (e.g., hex or base58) depending on the\nblockchain. Price feeds also have different IDs in mainnets than testnets or\ndevnets. The full list of price feeds is listed on the ",(0,r.jsx)(t.a,{href:"https://pyth.network/price-feeds",children:"pyth.network website"}),". The ",(0,r.jsx)(t.a,{href:"https://pyth.network/developers/price-feed-ids",children:"price feed IDs page"})," lists the\nID of each available price feed on every chain where they are available. To use\na price feed onchain, look up its ID using these pages, then store the feed ID\nin your program to use for price feed queries."]}),"\n",(0,r.jsx)(t.h2,{id:"pyth-on-evm-linea",children:"Pyth on EVM (Linea)"}),"\n",(0,r.jsxs)(t.p,{children:["Onchain EVM programs can use the ",(0,r.jsx)(t.a,{href:"https://github.com/pyth-network/pyth-sdk-solidity",children:"Solidity SDK"}),"\nto read Pyth prices. The ",(0,r.jsx)(t.a,{href:"https://docs.pyth.network/evm",children:"EVM API reference"})," lets\nyou interactively explore the complete API of the Pyth contract."]}),"\n",(0,r.jsxs)(t.p,{children:["The offchain portion of the application can use ",(0,r.jsx)(t.a,{href:"https://github.com/pyth-network/pyth-crosschain/tree/main/target_chains/ethereum/sdk/js",children:"pyth-evm-js"})," to generate price update transactions. This\nrepository's ",(0,r.jsx)(t.a,{href:"https://github.com/pyth-network/pyth-crosschain/tree/main/target_chains/ethereum/sdk/js#quickstart",children:"quickstart"})," includes an example of both the on- and offchain code necessary\nto integrate with Pyth."]}),"\n",(0,r.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(t.p,{children:["View ",(0,r.jsx)(t.a,{href:"https://github.com/pyth-network/pyth-examples/tree/main/price_feeds",children:"the example applications"}),"\nin the Pyth repository."]}),"\n",(0,r.jsx)(t.h3,{id:"networks",children:"Networks"}),"\n",(0,r.jsx)(t.p,{children:"Pyth is currently available on the following Linea networks:"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Network"}),(0,r.jsx)("th",{children:"Contract address"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Linea Mainnet"}),(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"https://explorer.linea.build/address/0xA2aa501b19aff244D90cc15a4Cf739D2725B5729",children:"0xA2aa501b19aff244D90cc15a4Cf739D2725B5729"})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Linea Sepolia"}),(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"https://sepolia.lineascan.build/address/0xA2aa501b19aff244D90cc15a4Cf739D2725B5729",children:"0xA2aa501b19aff244D90cc15a4Cf739D2725B5729"})})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"price-feed-ids-1",children:"Price feed IDs"}),"\n",(0,r.jsx)(t.p,{children:"The price feed IDs for EVM chains differs depending on whether they are a\nmainnet or testnet (see above):"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://pyth.network/developers/price-feed-ids#pyth-evm-mainnet",children:"List of mainnet IDs"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://pyth.network/developers/price-feed-ids#pyth-evm-testnet",children:"List of testnet IDs"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://x.com/PythNetwork",children:"X"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://discord.com/invite/PythNetwork",children:"Discord"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://pyth.network/",children:"Website"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://docs.pyth.network/documentation",children:"Docs"})}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);