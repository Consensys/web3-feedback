"use strict";(self.webpackChunkweb3_feedback=self.webpackChunkweb3_feedback||[]).push([[9915],{28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>i});var r=n(96540);const t={},l=r.createContext(t);function a(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(l.Provider,{value:s},e.children)}},79995:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>o,frontMatter:()=>a,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"api/linea-smart-contracts/interfaces/l1/il1messagemanager","title":"IL1MessageManager","description":"RollingHashUpdated","source":"@site/docs/api/linea-smart-contracts/interfaces/l1/il1messagemanager.mdx","sourceDirName":"api/linea-smart-contracts/interfaces/l1","slug":"/api/linea-smart-contracts/interfaces/l1/il1messagemanager","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/l1/il1messagemanager","draft":false,"unlisted":false,"editUrl":"https://github.com/Consensys/doc.linea/tree/main/docs/api/linea-smart-contracts/interfaces/l1/il1messagemanager.mdx","tags":[],"version":"current","lastUpdatedBy":"Joel Willmore","lastUpdatedAt":1747823869000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"IRateLimiter","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/iratelimiter"},"next":{"title":"IL1MessageManagerV1","permalink":"/web3-feedback/api/linea-smart-contracts/interfaces/l1/il1messagemanagerv1"}}');var t=n(74848),l=n(28453);const a={},i="IL1MessageManager",d={},h=[{value:"RollingHashUpdated",id:"rollinghashupdated",level:3},{value:"Parameters",id:"parameters",level:4},{value:"L2MerkleRootAdded",id:"l2merklerootadded",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"L2MessagingBlockAnchored",id:"l2messagingblockanchored",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"MessageAlreadyClaimed",id:"messagealreadyclaimed",level:3},{value:"L2MerkleRootAlreadyAnchored",id:"l2merklerootalreadyanchored",level:3},{value:"BytesLengthNotMultipleOfTwo",id:"byteslengthnotmultipleoftwo",level:3},{value:"isMessageClaimed",id:"ismessageclaimed",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Return Values",id:"return-values",level:4}];function c(e){const s={code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"il1messagemanager",children:(0,t.jsx)(s.code,{children:"IL1MessageManager"})})}),"\n",(0,t.jsx)(s.h3,{id:"rollinghashupdated",children:"RollingHashUpdated"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-solidity",children:"event RollingHashUpdated(uint256 messageNumber, bytes32 rollingHash, bytes32 messageHash)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Emitted when a new message is sent and the rolling hash updated."}),"\n",(0,t.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"messageNumber"}),(0,t.jsx)(s.td,{children:"uint256"}),(0,t.jsx)(s.td,{children:"The unique indexed message number for the message."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"rollingHash"}),(0,t.jsx)(s.td,{children:"bytes32"}),(0,t.jsx)(s.td,{children:"The indexed rolling hash computed for the current message number."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"messageHash"}),(0,t.jsx)(s.td,{children:"bytes32"}),(0,t.jsx)(s.td,{children:"The indexed hash of the message parameters."})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"l2merklerootadded",children:"L2MerkleRootAdded"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-solidity",children:"event L2MerkleRootAdded(bytes32 l2MerkleRoot, uint256 treeDepth)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Emitted when the L2 Merkle root has been anchored on L1."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"There may be more than one of these in a finalization depending on the amount of L2->L1 messages in the finalization."})}),"\n",(0,t.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"l2MerkleRoot"}),(0,t.jsx)(s.td,{children:"bytes32"}),(0,t.jsx)(s.td,{children:"The indexed L2 Merkle root that has been anchored on L1 Ethereum."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"treeDepth"}),(0,t.jsx)(s.td,{children:"uint256"}),(0,t.jsx)(s.td,{children:"The indexed tree depth of the Merkle root."})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"l2messagingblockanchored",children:"L2MessagingBlockAnchored"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-solidity",children:"event L2MessagingBlockAnchored(uint256 l2Block)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Emitted when the L2 block contains L2 messages during finalization."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"This is used externally in the logic for determining which messages belong to which Merkle root when claiming."})}),"\n",(0,t.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"l2Block"}),(0,t.jsx)(s.td,{children:"uint256"}),(0,t.jsx)(s.td,{children:"The indexed L2 block containing L2 to L1 messages."})]})})]}),"\n",(0,t.jsx)(s.h3,{id:"messagealreadyclaimed",children:"MessageAlreadyClaimed"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-solidity",children:"error MessageAlreadyClaimed(uint256 messageIndex)\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Thrown when the message has already been claimed."})}),"\n",(0,t.jsx)(s.h3,{id:"l2merklerootalreadyanchored",children:"L2MerkleRootAlreadyAnchored"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-solidity",children:"error L2MerkleRootAlreadyAnchored(bytes32 merkleRoot)\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Thrown when the L2 Merkle root has already been anchored on L1."})}),"\n",(0,t.jsx)(s.h3,{id:"byteslengthnotmultipleoftwo",children:"BytesLengthNotMultipleOfTwo"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-solidity",children:"error BytesLengthNotMultipleOfTwo(uint256 bytesLength)\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Thrown when the L2 messaging blocks offsets bytes length is not a multiple of 2."})}),"\n",(0,t.jsx)(s.h3,{id:"ismessageclaimed",children:"isMessageClaimed"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-solidity",children:"function isMessageClaimed(uint256 _messageNumber) external view returns (bool isClaimed)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Checks if the L2->L1 message is claimed or not."}),"\n",(0,t.jsx)(s.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"_messageNumber"}),(0,t.jsx)(s.td,{children:"uint256"}),(0,t.jsx)(s.td,{children:"The message number on L2."})]})})]}),"\n",(0,t.jsx)(s.h4,{id:"return-values",children:"Return Values"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"isClaimed"}),(0,t.jsx)(s.td,{children:"bool"}),(0,t.jsx)(s.td,{children:"Returns whether or not the message with _messageNumber has been claimed."})]})})]})]})}function o(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);